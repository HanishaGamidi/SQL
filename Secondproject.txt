Account.java

package Account;

public class Account {
	
	private int accountNumber;
    private int amount;
    public Account(int accountNumber, int amount) {
        super();
        this.accountNumber = accountNumber;
        this.amount = amount;
    }
    public Account() {
        // TODO Auto-generated constructor stub
    }
    public Account(int i) {
        // TODO Auto-generated constructor stub
    }
    public int getAccountNumber() {
        return accountNumber;
    }
    public void setAccountNumber(int accountNumber) {
        this.accountNumber = accountNumber;
    }
    public int getAmount() {
        return amount;
    }
    public void setAmount(int amount) {
        this.amount = amount;
    }
    
    

}

ICICIBank.java

package ICICIBank;

import java.util.LinkedList;

import Account.Account;
import Exception.InsufficientBalanceException;
import Exception.InsufficientOpeningBalanceException;
import Exception.InvalidAccountNumberException;
import Account.Account;
import Exception.InsufficientBalanceException;
import Exception.InsufficientOpeningBalanceException;
import Exception.InvalidAccountNumberException;
public class ICICIBank {
    
    
    LinkedList<Account> accounts=new LinkedList<>();
    
    
    public String createAccount(int accountNumber,int amount)throws InsufficientOpeningBalanceException
    {   
        if(amount<500)
        {
            throw new InsufficientOpeningBalanceException();
            
        }
        Account account = new Account();
        account.setAccountNumber(accountNumber);
        account.setAmount(amount);
        
        accounts.add(account);
        
        return "account created successfully";
    }
    
    private Account searchAccount(int accountNumber)throws InvalidAccountNumberException
    {
        
        for(Account account : accounts)
        {
            if(account.getAccountNumber()==accountNumber)
            {
                return account;
            }
        }
        throw new InvalidAccountNumberException();
        
    }
    
    public int withdrawAmount(int accountNumber,int amount) throws InvalidAccountNumberException, InsufficientBalanceException
    {
        Account account=searchAccount(accountNumber);
        
        if((account.getAmount()-amount)>=0)
        {
            account.setAmount(account.getAmount()-amount);
            return account.getAmount();
        }
        
        throw new InsufficientBalanceException();
    }
    public int DepositAmount(int accountNumber,int amount) throws InvalidAccountNumberException, InsufficientBalanceException
    {
        Account account=searchAccount(accountNumber);
        
        if((account.getAmount()+amount)>=0)
        {
            account.setAmount(account.getAmount()+amount);
            return account.getAmount();
        }
        
        throw new InsufficientBalanceException();
    }

    public int FunderTransfer(int i,int j, int k) throws InsufficientBalanceException, InvalidAccountNumberException
    {
        Account account1=searchAccount(i);
        Account account2=searchAccount(j);
        
        if((account1.getAmount()-k>=0))
        {
            account1.setAmount(account1.getAmount()-k);
            account2.setAmount(account2.getAmount()+k);
            return account1.getAmount();
        }
            throw new InsufficientBalanceException();
    }

}

Client.java

package Client;

import Exception.InsufficientBalanceException;
import Exception.InsufficientOpeningBalanceException;
import Exception.InvalidAccountNumberException;
import ICICIBank.ICICIBank;

public class Client {

    public static void main(String[] args) {
        ICICIBank bank = new ICICIBank();
        
        try {
            System.out.println(bank.createAccount(101, 9000));
        } catch (InsufficientOpeningBalanceException e) {
            e.printStackTrace();
        }
        try {
            System.out.println(bank.createAccount(102, 3000));
        } catch (InsufficientOpeningBalanceException e) {
            e.printStackTrace();
        }
        
        try
        {
            System.out.println("Balance = "+bank.withdrawAmount(101, 2000));
            System.out.println("Balance = "+bank.DepositAmount(102, 4000));
            System.out.println("Balance = "+bank.FunderTransfer(101, 102,1000));
           
        }catch(InvalidAccountNumberException i)
        {
            System.out.println("Invalid account number ");
        }
        catch(InsufficientBalanceException ibe){
            System.out.println("insufficient balance");
        }

    }

	
}